<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Alfons&#39;s Blog</title>
    <link>https://alfonsxh.github.io/tags/python/</link>
    <description>Recent content in Python on Alfons&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 07 Feb 2024 14:38:49 +0800</lastBuildDate>
    <atom:link href="https://alfonsxh.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python虚拟环境</title>
      <link>https://alfonsxh.github.io/post/python/python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Wed, 07 Feb 2024 14:38:49 +0800</pubDate>
      <guid>https://alfonsxh.github.io/post/python/python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/</guid>
      <description>&lt;p&gt;虚拟环境为运行Python项目的理想环境，可以有效的与系统Python环境进行隔离，每个项目都可以有一个干净的环境运行。&lt;/p&gt;&#xA;&lt;p&gt;但是对于国内一些企业，客户现场环境复杂，甚至无法连接外网。对于这种场景，任何虚拟环境创建的手段都无法实现。&lt;/p&gt;&#xA;&lt;p&gt;虽然 Pyinstaller 可以实现，但跨多个 Linux 操作系统，想要实现 &amp;ldquo;&lt;strong&gt;一包通用&lt;/strong&gt;&amp;quot;，仍没有办法实现。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python argparse 模块 hook 输入参数的几种方式</title>
      <link>https://alfonsxh.github.io/post/python/python_argparse%E6%A8%A1%E5%9D%97hook%E8%BE%93%E5%85%A5%E5%8F%82%E6%95%B0/</link>
      <pubDate>Tue, 25 Aug 2020 16:35:40 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/python_argparse%E6%A8%A1%E5%9D%97hook%E8%BE%93%E5%85%A5%E5%8F%82%E6%95%B0/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;需求描述：&lt;/p&gt;&#xA;&lt;p&gt;用户输入size参数值，如果未给定单位，需要指定默认的size单位。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Python pyconcrete加解密py文件</title>
      <link>https://alfonsxh.github.io/post/python/python_pyconcrete%E5%8A%A0%E8%A7%A3%E5%AF%86py%E6%96%87%E4%BB%B6/</link>
      <pubDate>Wed, 03 Jun 2020 22:53:48 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/python_pyconcrete%E5%8A%A0%E8%A7%A3%E5%AF%86py%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;p&gt;&lt;strong&gt;pyconcrete&lt;/strong&gt; 是一个加密模块，可以将py文件，通过AES加密的方式，将py文件编译过后的pyc文件转换成家秘密后的pye文件，在使用时，再通过AES解密出pyc源码，直接加载到内存中，进行执行。&lt;/p&gt;&#xA;&lt;p&gt;这种方式可以暂时保证源码不被泄漏，但是，加密的方式为对称加密，只要知道密钥，就能解密出pyc源码，再通过其他方式，就能还原出py文件。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python 性能分析</title>
      <link>https://alfonsxh.github.io/post/python/python%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 03 Jun 2020 22:53:48 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/python%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/</guid>
      <description>参考几种性能分析的方式。事例代码如下：&#xA;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import sys def fib(n): if n == 0: return 0 elif n == 1: return 1 else: return fib(n - 1) + fib(n - 2) def fib_seq(n): seq = [] if n &amp;gt; 0: seq.extend(fib_seq(n - 1)) seq.append(fib(n)) return seq if __name__ == &amp;#39;__main__&amp;#39;: print fib_seq(int(sys.argv[1])) 暴力(time)性能分析 最简单的性能分析方式，使用系统命令 time，或者python中的 timeit、time 模块。</description>
    </item>
    <item>
      <title>Python中的下划线</title>
      <link>https://alfonsxh.github.io/post/python/python%E4%B8%AD%E7%9A%84%E4%B8%8B%E5%88%92%E7%BA%BF/</link>
      <pubDate>Thu, 04 Jul 2019 23:06:17 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/python%E4%B8%AD%E7%9A%84%E4%B8%8B%E5%88%92%E7%BA%BF/</guid>
      <description>&lt;p&gt;python中的变量命名可以是：&lt;strong&gt;var&lt;/strong&gt;、&lt;strong&gt;_var&lt;/strong&gt;、&lt;strong&gt;__var&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python中一种单例无效的情况</title>
      <link>https://alfonsxh.github.io/post/python/python%E4%B8%AD%E4%B8%80%E7%A7%8D%E5%8D%95%E4%BE%8B%E6%97%A0%E6%95%88%E7%9A%84%E6%83%85%E5%86%B5/</link>
      <pubDate>Wed, 26 Jun 2019 22:24:42 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/python%E4%B8%AD%E4%B8%80%E7%A7%8D%E5%8D%95%E4%BE%8B%E6%97%A0%E6%95%88%E7%9A%84%E6%83%85%E5%86%B5/</guid>
      <description>&lt;p&gt;在Python中，如果要创建一个单例，通常有两种方式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python中的进程池和线程池</title>
      <link>https://alfonsxh.github.io/post/python/python%E4%B8%AD%E7%9A%84%E8%BF%9B%E7%A8%8B%E6%B1%A0%E5%92%8C%E7%BA%BF%E7%A8%8B%E6%B1%A0/</link>
      <pubDate>Wed, 26 Jun 2019 22:24:42 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/python%E4%B8%AD%E7%9A%84%E8%BF%9B%E7%A8%8B%E6%B1%A0%E5%92%8C%E7%BA%BF%E7%A8%8B%E6%B1%A0/</guid>
      <description>&lt;p&gt;最近有用Python标准模板库里的线程池实现一些东西，发现非常好用，记录一下。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python json解析双斜杠字符串</title>
      <link>https://alfonsxh.github.io/post/python/python_json%E8%A7%A3%E6%9E%90%E5%8F%8C%E6%96%9C%E6%9D%A0%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Sat, 25 May 2019 23:58:22 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/python_json%E8%A7%A3%E6%9E%90%E5%8F%8C%E6%96%9C%E6%9D%A0%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>&lt;p&gt;有时候在处理requests返回的结果时，会出现中文unicode编码为双斜杠的情况。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DoubanMovie爬取</title>
      <link>https://alfonsxh.github.io/post/python/spider/doubanmovie%E7%88%AC%E8%99%AB/</link>
      <pubDate>Sun, 17 Feb 2019 22:45:16 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/spider/doubanmovie%E7%88%AC%E8%99%AB/</guid>
      <description>&lt;p&gt;对豆瓣上的电影详细信息进行爬取，使用到的框架是 &lt;strong&gt;Scrapy&lt;/strong&gt;。效率为24h爬取十万多部(效率可能不太高&amp;hellip;)。记录一下爬取的过程和遇到的问题。&lt;/p&gt;&#xA;&lt;p&gt;代码放在github：&lt;a href=&#34;https://github.com/Alfonsxh/Spider&#34;&gt;https://github.com/Alfonsxh/Spider&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python GIL</title>
      <link>https://alfonsxh.github.io/post/python/gil%E5%85%A8%E5%B1%80%E8%A7%A3%E9%87%8A%E5%99%A8%E9%94%81/</link>
      <pubDate>Wed, 30 Jan 2019 13:32:21 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/gil%E5%85%A8%E5%B1%80%E8%A7%A3%E9%87%8A%E5%99%A8%E9%94%81/</guid>
      <description>&lt;p&gt;对于CPU密集型程序来说，使用Python作为开发工具，是一个失败的尝试，因为 &lt;code&gt;GIL(Global Interpreter Lock)&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;GIL&lt;/strong&gt; 译为 &lt;strong&gt;全局解释器锁&lt;/strong&gt;。是的，是 &lt;strong&gt;解释器锁&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SqlAlchemy使用</title>
      <link>https://alfonsxh.github.io/post/python/sqlalchemy/</link>
      <pubDate>Mon, 28 Jan 2019 14:17:43 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/sqlalchemy/</guid>
      <description>&lt;p&gt;&lt;strong&gt;SqlAlchemy(Sql炼金术？)&lt;/strong&gt; 是Python下的一款 &lt;strong&gt;ORM(Object Relational Mapping 对象关系映射)框架&lt;/strong&gt;，框架建立在数据库API之上，使用关系对象映射进行数据库操作。将对象转换为sql，然后调用数据库API执行sql并获取结果。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python装饰器----Decorator</title>
      <link>https://alfonsxh.github.io/post/python/python%E8%A3%85%E9%A5%B0%E5%99%A8/</link>
      <pubDate>Sat, 26 Jan 2019 11:00:55 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/python%E8%A3%85%E9%A5%B0%E5%99%A8/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt; 的装饰器模式通过 &lt;strong&gt;语法糖&lt;/strong&gt; 实现，相较于其他语言的装饰器模式，十分的优雅。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python   slots  和  all  </title>
      <link>https://alfonsxh.github.io/post/python/python__slots__%E5%92%8C__all__/</link>
      <pubDate>Fri, 25 Jan 2019 22:35:00 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/python__slots__%E5%92%8C__all__/</guid>
      <description>&lt;h2 id=&#34;__slots__&#34;&gt;__slots__&lt;/h2&gt;&#xA;&lt;p&gt;在python中，我们可以在实例化对象后绑定对象的方法或属性：&lt;/p&gt;</description>
    </item>
    <item>
      <title>2_Scrapy模块使用及调试</title>
      <link>https://alfonsxh.github.io/post/python/spider/scrapy/2_scrapy%E6%A8%A1%E5%9D%97%E4%BD%BF%E7%94%A8%E5%8F%8A%E8%B0%83%E8%AF%95/</link>
      <pubDate>Mon, 14 Jan 2019 16:25:42 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/spider/scrapy/2_scrapy%E6%A8%A1%E5%9D%97%E4%BD%BF%E7%94%A8%E5%8F%8A%E8%B0%83%E8%AF%95/</guid>
      <description>&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install scrapy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Python json解析错误处理</title>
      <link>https://alfonsxh.github.io/post/python/python_json%E8%A7%A3%E6%9E%90%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</link>
      <pubDate>Sat, 05 Jan 2019 15:07:21 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/python_json%E8%A7%A3%E6%9E%90%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</guid>
      <description>&lt;p&gt;在处理Json字符串时，当在Json原始数据中出现某些 &lt;strong&gt;空格&lt;/strong&gt; 时，可能会出现 &lt;strong&gt;json.decoder.JSONDecodeError&lt;/strong&gt; 的错误。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python pymysql连接错误</title>
      <link>https://alfonsxh.github.io/post/python/python_pymysql%E8%BF%9E%E6%8E%A5%E9%94%99%E8%AF%AF/</link>
      <pubDate>Sat, 05 Jan 2019 15:07:21 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/python_pymysql%E8%BF%9E%E6%8E%A5%E9%94%99%E8%AF%AF/</guid>
      <description>&lt;p&gt;在使用pymysql模块与数据库进行交互时，如果长时间进行连接，可能会出现连接中断，导致无法操作数据库的问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redis使用</title>
      <link>https://alfonsxh.github.io/post/redis%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 18 Dec 2018 21:21:48 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/redis%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Redis&lt;/strong&gt; 可以把它当作一个 &lt;strong&gt;存在于内存中、非关系型(nosql)的数据库&lt;/strong&gt;。其实现有点儿类似于 &lt;strong&gt;磁盘缓存策略的实现方式&lt;/strong&gt;，不过似乎要复杂一点。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Scrapy(1)-模块介绍</title>
      <link>https://alfonsxh.github.io/post/python/spider/scrapy/1_scrapy%E6%A8%A1%E5%9D%97%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sun, 09 Dec 2018 21:43:03 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/spider/scrapy/1_scrapy%E6%A8%A1%E5%9D%97%E4%BB%8B%E7%BB%8D/</guid>
      <description>&lt;p&gt;之前一直使用 &lt;strong&gt;requests + re&lt;/strong&gt; 的方式做爬虫……所有的步骤：访问、分析结果、存储结果、多进程、异步等等，都是自己实现的……最大的坑莫过于 &lt;strong&gt;正则匹配&lt;/strong&gt;，虽说 &lt;strong&gt;正则&lt;/strong&gt; 很强大，但是经常会出现一些异常的数据。另外，爬取不同的网站，又得重新来一套！！&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beautiful Soup使用手册</title>
      <link>https://alfonsxh.github.io/post/python/spider/beautifulsoup%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</link>
      <pubDate>Thu, 29 Nov 2018 19:29:58 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/spider/beautifulsoup%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Beautiful Soup&lt;/strong&gt;作用是处理从网页爬下来的数据，如果说 &lt;strong&gt;scrapy&lt;/strong&gt;是辆车，那么 &lt;strong&gt;Beautiful Soup&lt;/strong&gt;就是车轮。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Frida API</title>
      <link>https://alfonsxh.github.io/post/python/frida/frida_api_%E4%B8%8D%E5%AE%8C%E6%95%B4%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Thu, 29 Nov 2018 19:29:58 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/frida/frida_api_%E4%B8%8D%E5%AE%8C%E6%95%B4%E8%AF%B4%E6%98%8E/</guid>
      <description>&lt;h2 id=&#34;python-api&#34;&gt;Python API&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;Frida Python端&lt;/code&gt;调用的&lt;code&gt;API&lt;/code&gt;主要用于启动程序，并将&lt;code&gt;JavaScript 脚本&lt;/code&gt;注入到对应进程的内存。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Frida使用手册</title>
      <link>https://alfonsxh.github.io/post/python/frida/frida_%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</link>
      <pubDate>Thu, 29 Nov 2018 19:29:58 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/frida/frida_%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</guid>
      <description>&lt;h2 id=&#34;0介绍&#34;&gt;0、介绍&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;Frida&lt;/code&gt; 是一个跨平台的应用分析工具。能够注入JavaScript或者自己库的片段注入到 Windows, macOS, Linux, iOS, Android, and QNX 平台的应用上。支持 Google 的 &lt;code&gt;V8&lt;/code&gt; 引擎，从版本9开始，也支持 &lt;code&gt;Duktape&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;代码注入的方式很多。&lt;code&gt;Xposed&lt;/code&gt; 会永久修改Android应用程序加载器，每次启动的新进程都运行的时自己的挂钩程序。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;Frida&lt;/code&gt; 通过将代码直接写入进程内存来实现代码的植入。当附加到正在运行的应用程序时，&lt;code&gt;Frida&lt;/code&gt;使用&lt;code&gt;ptrace&lt;/code&gt;来劫持正在运行的进程的线程。该线程用于分配一块内存并使用迷你引导程序填充它。引导程序启动一个新线程，连接到设备上运行的&lt;code&gt;Frida&lt;/code&gt;调试服务器，并加载包含&lt;code&gt;Frida&lt;/code&gt;代理程序和检测代码的动态生成的库文件。被劫持的线程在恢复到其原始状态后恢复，并且流程执行继续照常进行。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python lxml模块中使用XPath语句</title>
      <link>https://alfonsxh.github.io/post/python/spider/lxml%E4%B8%AD%E4%BD%BF%E7%94%A8xpath/</link>
      <pubDate>Thu, 29 Nov 2018 19:29:58 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/spider/lxml%E4%B8%AD%E4%BD%BF%E7%94%A8xpath/</guid>
      <description>&lt;p&gt;&lt;strong&gt;lxml模块&lt;/strong&gt; 有很多种功能，不单只有 &lt;strong&gt;XPath&lt;/strong&gt; 的方式解析 &lt;strong&gt;xml文档&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Django--URLconf</title>
      <link>https://alfonsxh.github.io/post/python/django%E7%AC%94%E8%AE%B0/2_django_urlconf/</link>
      <pubDate>Tue, 27 Nov 2018 16:24:15 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/django%E7%AC%94%E8%AE%B0/2_django_urlconf/</guid>
      <description>&lt;p&gt;&lt;code&gt;URLconf (URL configuration)&lt;/code&gt;，Django中的 &lt;strong&gt;URL调度器&lt;/strong&gt; 使用的是纯python代码，是 &lt;strong&gt;URL路径&lt;/strong&gt; 解释到 &lt;strong&gt;Python功能函数&lt;/strong&gt; 的映射。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Django--模板</title>
      <link>https://alfonsxh.github.io/post/python/django%E7%AC%94%E8%AE%B0/3_django_%E6%A8%A1%E6%9D%BF/</link>
      <pubDate>Tue, 27 Nov 2018 16:24:15 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/django%E7%AC%94%E8%AE%B0/3_django_%E6%A8%A1%E6%9D%BF/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Django&lt;/strong&gt; 中的视图要么返回一个包含被请求页面内容的 &lt;strong&gt;HttpResponse&lt;/strong&gt; 对象，或者抛出一个异常。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Django通用视图</title>
      <link>https://alfonsxh.github.io/post/python/django%E7%AC%94%E8%AE%B0/4_django_%E9%80%9A%E7%94%A8%E8%A7%86%E5%9B%BE/</link>
      <pubDate>Tue, 27 Nov 2018 16:24:15 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/django%E7%AC%94%E8%AE%B0/4_django_%E9%80%9A%E7%94%A8%E8%A7%86%E5%9B%BE/</guid>
      <description>&lt;p&gt;使用通用视图的好处在于，能够最大程度的重复利用代码，减少代码量，并且方便扩展。&lt;/p&gt;&#xA;&lt;p&gt;使用 &lt;strong&gt;函数&lt;/strong&gt; 的方式实现：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Django入门篇1-模型和admin用户</title>
      <link>https://alfonsxh.github.io/post/python/django%E7%AC%94%E8%AE%B0/1_diango%E5%85%A5%E9%97%A8%E7%AF%87/</link>
      <pubDate>Fri, 09 Nov 2018 00:26:41 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/django%E7%AC%94%E8%AE%B0/1_diango%E5%85%A5%E9%97%A8%E7%AF%87/</guid>
      <description>&lt;h2 id=&#34;项目与应用&#34;&gt;项目与应用&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;项目&lt;/code&gt;是一个网站使用的配置和应用的集合。项目可以包含很多个应用。应用可以被很多个项目使用。&#xA;&lt;code&gt;应用&lt;/code&gt;是一个专门做某件事的网络应用程序——比如博客系统，或者公共记录的数据库，或者简单的投票程序。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;在Django中，使用&lt;code&gt;startproject&lt;/code&gt;来创建项目，使用&lt;code&gt;startapp&lt;/code&gt;来创建应用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hashcat使用说明</title>
      <link>https://alfonsxh.github.io/post/python/hashcat%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Fri, 28 Sep 2018 21:51:01 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/hashcat%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</guid>
      <description>&lt;p&gt;&lt;code&gt;hashcat&lt;/code&gt;是目前世界上最快的密码破解工具，能够破译众多类型的密码，可以使用CPU，也可以使用GPU作为计算单元。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何杀死Python subprocess.Popen创建的进程</title>
      <link>https://alfonsxh.github.io/post/python/python%E6%9D%80%E4%B8%8D%E6%AD%BB%E7%9A%84%E5%AD%90%E8%BF%9B%E7%A8%8B/</link>
      <pubDate>Fri, 28 Sep 2018 21:51:01 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/python%E6%9D%80%E4%B8%8D%E6%AD%BB%E7%9A%84%E5%AD%90%E8%BF%9B%E7%A8%8B/</guid>
      <description>&lt;p&gt;在使用&lt;code&gt;Popen&lt;/code&gt;模块创建进程执行时，发现启动的进程&lt;code&gt;proc&lt;/code&gt;在使用&lt;code&gt;proc.kill()&lt;/code&gt;后，仍然存在。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Django论坛部署</title>
      <link>https://alfonsxh.github.io/post/python/django%E7%AC%94%E8%AE%B0/django%E8%AE%BA%E5%9D%9B%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Sat, 07 Jul 2018 19:12:47 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/django%E7%AC%94%E8%AE%B0/django%E8%AE%BA%E5%9D%9B%E9%83%A8%E7%BD%B2/</guid>
      <description>&lt;p&gt;这两天在外部压力的作用下，把之前写的Django框架搭建的留言板部署了一下。本来是觉得，既然代码都已经弄得差不多了，本地运行没什么问题的，部不部署就没什么了。&lt;/p&gt;&#xA;&lt;p&gt;哈哈哈，还是太天真了。&lt;/p&gt;&#xA;&lt;p&gt;查看了一下原教程的&lt;a href=&#34;https://simpleisbetterthancomplex.com/series/2017/10/16/a-complete-beginners-guide-to-django-part-7.html&#34;&gt;部署步骤&lt;/a&gt;，应该问题不大。&lt;/p&gt;&#xA;&lt;p&gt;服务器去年搭梯子时已经买了。私人部署，域名需不需要，感觉关系不大，可以省略。&lt;/p&gt;&#xA;&lt;p&gt;OK，开始部署。&lt;/p&gt;</description>
    </item>
    <item>
      <title>subprocess中Popen，call的区别</title>
      <link>https://alfonsxh.github.io/post/python/subprocess%E4%B8%ADpopencall%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Sat, 07 Jul 2018 19:12:47 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/subprocess%E4%B8%ADpopencall%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>&lt;p&gt;这两天测试的时候，发现使用Popen创建的进程没有把命令执行完毕，导致程序Bug～&lt;/p&gt;</description>
    </item>
    <item>
      <title>argparse 处理命令行参数</title>
      <link>https://alfonsxh.github.io/post/python/stl/11_generic_operating/11.2-argparse/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/stl/11_generic_operating/11.2-argparse/</guid>
      <description>&lt;p&gt;&lt;strong&gt;argparse模块&lt;/strong&gt; 主要用来处理传入的命令行参数，之前版本有使用 &lt;strong&gt;optparse模块&lt;/strong&gt; 实现类似的效果，不过 &lt;strong&gt;optparse模块&lt;/strong&gt; 已停止更新，并不推荐使用了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;argparse模块&lt;/strong&gt; 使用：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;ArgumentParser&lt;/strong&gt; - 创建parser实例。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;add_argument&lt;/strong&gt; - 添加命令行参数。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;parse_args&lt;/strong&gt; - 处理参数。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;其中关键的部分是 &lt;strong&gt;add_argument&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>configparser 配置解析</title>
      <link>https://alfonsxh.github.io/post/python/stl/09_file_formats/9.1-configparser/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/stl/09_file_formats/9.1-configparser/</guid>
      <description>&lt;p&gt;&lt;strong&gt;configparser&lt;/strong&gt; 模块是标准库中用来解析类似 &lt;strong&gt;.ini&lt;/strong&gt; 文件的模块。&lt;/p&gt;</description>
    </item>
    <item>
      <title>difflib 字符串差异比较</title>
      <link>https://alfonsxh.github.io/post/python/stl/01_text_processing/1.3-difflib/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/stl/01_text_processing/1.3-difflib/</guid>
      <description>&lt;p&gt;&lt;strong&gt;difflib&lt;/strong&gt; 模块用于比较两段字符串的差异，有点类似于github的更新对比功能。&lt;/p&gt;</description>
    </item>
    <item>
      <title>platform 平台信息模块</title>
      <link>https://alfonsxh.github.io/post/python/stl/11_generic_operating/11.1-platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/stl/11_generic_operating/11.1-platform/</guid>
      <description>&lt;p&gt;&lt;strong&gt;platform&lt;/strong&gt; 模块主要功能是，提供平台的一些信息，包括操作系统信息，python版本信息等。不同的平台获取的信息不同。&lt;/p&gt;</description>
    </item>
    <item>
      <title>re 正则表达式</title>
      <link>https://alfonsxh.github.io/post/python/stl/01_text_processing/1.2-re/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/stl/01_text_processing/1.2-re/</guid>
      <description>&lt;p&gt;正则表达式在各种语言上都有实现，使用相同的语法可以得到相同的效果。&lt;/p&gt;</description>
    </item>
    <item>
      <title>string 字符串常量和模板</title>
      <link>https://alfonsxh.github.io/post/python/stl/01_text_processing/1.1-string/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/stl/01_text_processing/1.1-string/</guid>
      <description>&lt;p&gt;&lt;strong&gt;string&lt;/strong&gt; 模块大部分功能已被 &lt;strong&gt;str对象&lt;/strong&gt; 实现，但一些字符常量人保留了下来&lt;/p&gt;</description>
    </item>
    <item>
      <title>struct 二进制编码与解码</title>
      <link>https://alfonsxh.github.io/post/python/stl/02_binary_data/2.1-struct/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/stl/02_binary_data/2.1-struct/</guid>
      <description>&lt;p&gt;&lt;strong&gt;struct&lt;/strong&gt; 模块用于二进制数据，常用于处理网络数据。&lt;/p&gt;</description>
    </item>
    <item>
      <title>textwrap 字符串段格式化</title>
      <link>https://alfonsxh.github.io/post/python/stl/01_text_processing/1.4-textwrap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://alfonsxh.github.io/post/python/stl/01_text_processing/1.4-textwrap/</guid>
      <description>&lt;p&gt;&lt;strong&gt;textwrap&lt;/strong&gt; 模块是一个使字符串按要求排列的模块。主要方式包括以下几种：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;wrap&lt;/strong&gt; - 返回格式化后的字符串列表，每一行为列表的一个元素。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;fill&lt;/strong&gt; - 按指定宽度填充字符串的每一行。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;shorten&lt;/strong&gt; - 略缩显示字符串。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;dedent&lt;/strong&gt; - 反缩进去除每行行首的空白。这方便显示三引号中的内容而不修改其源代码中的缩进。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;indent&lt;/strong&gt; - 添加缩进。&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
